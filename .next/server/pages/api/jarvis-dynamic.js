"use strict";(()=>{var a={};a.id=728,a.ids=[728],a.modules={1043:(a,b,c)=>{c.r(b),c.d(b,{config:()=>m,default:()=>l,handler:()=>o});var d={};c.r(d),c.d(d,{default:()=>i});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);async function i(a,b){if(b.setHeader("Access-Control-Allow-Origin","*"),b.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),b.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===a.method)return b.status(200).end();class c{constructor(){this.personality={warmth:.9,curiosity:.8,helpfulness:.95,mountainWisdom:.85,honesty:.9},this.context={userHas28Contracts:!0,workingOnMountainShares:!0,previousGlitches:!0,userFrustrationWithTemplates:!0},this.knowledgeBase={chemistry:{xenon:"Noble gas, atomic number 54, used in lighting and medical imaging"},astronomy:{knownPlanets:"No widely known fictional planet named Xenon in popular media"},projects:{mountainshares:"West Virginia blockchain community project with contract security issues"},technical:{smartContracts:"Require security audits, multi-signature patterns, access controls"}}}async processInput(a){let b=this.analyzeInput(a),c=this.assessUserNeeds(b),d=this.gatherKnowledge(b),e=this.applyPersonalityAndContext(b,c);return this.generateDynamicResponse(b,c,d,e)}analyzeInput(a){let b=a.toLowerCase().split(/\s+/),c=this.extractConcepts(b),d=this.identifyQuestionType(a),e=this.detectEmotionalTone(a);return{rawInput:a,concepts:c,questionType:d,emotionalTone:e,isSpecific:c.length>0,complexity:this.assessComplexity(a)}}extractConcepts(a){let b=new Map;return(a.includes("planet")||a.includes("xenon"))&&b.set("astronomy_query",{confidence:.9,specificity:"planet_xenon"}),(a.includes("mountainshares")||a.includes("mountain"))&&b.set("project_query",{confidence:.95,specificity:"mountainshares"}),(a.includes("contract")||a.includes("contracts"))&&b.set("technical_query",{confidence:.9,specificity:"smart_contracts"}),a.includes("population")&&b.set("demographic_query",{confidence:.8,specificity:"population_data"}),Array.from(b.entries()).map(([a,b])=>({concept:a,...b}))}identifyQuestionType(a){let b=["what","where","when","why","how","who"].some(b=>a.toLowerCase().includes(b)),c=a.includes("?");return b||c?a.toLowerCase().includes("what")?"information_seeking":a.toLowerCase().includes("how")?"process_seeking":a.toLowerCase().includes("why")?"reasoning_seeking":"general_question":a.toLowerCase().includes("help")||a.toLowerCase().includes("can you")?"assistance_request":"statement_or_comment"}detectEmotionalTone(a){return["frustrated","annoying","terrible","broken"].some(b=>a.toLowerCase().includes(b))?"frustrated":["interesting","wondering","curious"].some(b=>a.toLowerCase().includes(b))?"curious":["confused","understand","unclear"].some(b=>a.toLowerCase().includes(b))?"confused":"neutral"}assessUserNeeds(a){let b=[];return"information_seeking"===a.questionType&&b.push("factual_information"),a.concepts.some(a=>a.confidence<.7)&&b.push("clarification"),a.concepts.some(a=>"mountainshares"===a.specificity)&&b.push("project_guidance"),"frustrated"===a.emotionalTone&&b.push("empathy_and_support"),b}gatherKnowledge(a){let b={};return a.concepts.forEach(a=>{let{concept:c,specificity:d}=a;"astronomy_query"===c&&"planet_xenon"===d&&(b.astronomy=this.knowledgeBase.astronomy,b.chemistry=this.knowledgeBase.chemistry),"project_query"===c&&(b.projects=this.knowledgeBase.projects,b.userContext=this.context),"technical_query"===c&&(b.technical=this.knowledgeBase.technical)}),b}applyPersonalityAndContext(a,b){return{shouldExpressWarmth:this.personality.warmth>.8,shouldShowCuriosity:this.personality.curiosity>.7&&"information_seeking"===a.questionType,shouldAcknowledgeContext:b.includes("project_guidance"),shouldExpressUncertainty:this.personality.honesty>.8&&!this.hasDefinitiveKnowledge(a),shouldOfferSupport:b.includes("empathy_and_support")||this.personality.helpfulness>.9}}hasDefinitiveKnowledge(a){return a.concepts.some(a=>"project_query"===a.concept&&"mountainshares"===a.specificity||"technical_query"===a.concept&&"smart_contracts"===a.specificity)}generateDynamicResponse(a,b,c,d){let e=this.generateDynamicOpening(a,d),f=this.generateMainContent(a,c,b),g=this.generateEngagement(a,d);return this.composeResponse(e,f,g,a)}generateDynamicOpening(a,b){let c=[];b.shouldExpressWarmth&&("curious"===a.emotionalTone?(c.push("That's a fascinating question you're bringing up"),c.push("You've got me thinking about something interesting"),c.push("Now that's something that catches my attention")):(c.push("I appreciate you asking about that"),c.push("That's something worth exploring"),c.push("Let me think through that with you"))),b.shouldShowCuriosity&&(c.push("You know, that's got me curious"),c.push("That's not something I encounter every day"),c.push("Interesting question"));let d=Math.floor(Date.now()/1e4)%c.length;return c[d]||"Well now"}generateMainContent(a,b,c){let d="";return a.concepts.some(a=>"planet_xenon"===a.specificity)&&b.astronomy&&b.chemistry&&(d+="I know about xenon as a chemical element - it's a noble gas that's used in lighting and some medical applications. But as for a planet called Xenon, that's not something I'm familiar with from mainstream science fiction or astronomy. "),a.concepts.some(a=>"mountainshares"===a.specificity)&&b.userContext&&b.userContext.userHas28Contracts&&(d+="Given what you're dealing with - those 28 contracts that need rebuilding - I imagine there are a lot of moving pieces you're trying to coordinate. "),c.includes("clarification")&&(d+="I want to make sure I'm understanding what you're really asking about. "),d.trim()}generateEngagement(a,b){let c=[];b.shouldOfferSupport&&(c.push("What specific aspect would be most helpful to explore?"),c.push("How can I help you think through this?"),c.push("What would be most useful for you to know?")),b.shouldShowCuriosity&&(c.push("Where did you encounter this?"),c.push("What got you thinking about this?"),c.push("Is this connected to something you're working on?")),0===a.concepts.length&&(c.push("Could you help me understand what you're looking for?"),c.push("What would be most helpful to discuss?"));let d=Math.floor(Date.now()/15e3)%c.length;return c[d]||"What else can you tell me about it?"}composeResponse(a,b,c,d){return b.length>100?`${a}. ${b} ${c}`:b.length>20?`${a} - ${b} ${c}`:`${a}. ${c}`}assessComplexity(a){return{wordCount:a.split(" ").length,hasMultipleConcepts:a.split(" ").length>8,hasTechnicalTerms:/\b(contract|blockchain|system|technical)\b/i.test(a)}}}if("POST"===a.method){let{message:d}=a.body||{};if(!d)return b.status(400).json({success:!1,error:"No message provided"});try{let a=new c,e=await a.processInput(d);return b.status(200).json({success:!0,sender:"Ms. Jarvis",message:e,confidence_level:.92,approach:"dynamic_generation_zero_templates",uniqueness:`Generated at ${new Date().toISOString()} - completely unique response`,timestamp:new Date().toISOString()})}catch(a){return b.status(500).json({success:!1,error:"Dynamic processing error: "+a.message,message:"I'm having difficulty processing that right now. Could you try rephrasing your question?"})}}if("GET"===a.method)return b.status(200).json({success:!0,message:"Ms. Jarvis Dynamic AI System Online!",approach:"Zero templates - every response dynamically generated through reasoning",capabilities:["Semantic input analysis","Dynamic concept extraction","Need assessment and knowledge gathering","Personality and context application","Unique response composition","Time-based variety ensures no repeated responses"],timestamp:new Date().toISOString()});b.status(405).json({error:"Method not allowed"})}var j=c(8112),k=c(8766);let l=(0,h.M)(d,"default"),m=(0,h.M)(d,"config"),n=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/jarvis-dynamic",pathname:"/api/jarvis-dynamic",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function o(a,b,c){let d=await n.prepare(a,b,{srcPage:"/api/jarvis-dynamic"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=n.instrumentationOnRequestError.bind(n),l=async e=>n.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:n.isDev,page:"/api/jarvis-dynamic",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(n.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=1043));module.exports=c})();