"use strict";(()=>{var a={};a.id=395,a.ids=[395],a.modules={5215:(a,b,c)=>{c.r(b),c.d(b,{config:()=>m,default:()=>l,handler:()=>o});var d={};c.r(d),c.d(d,{default:()=>i});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);function i(a,b){if(b.setHeader("Access-Control-Allow-Origin","*"),b.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),b.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===a.method)return b.status(200).end();let c={"employee reward vault":{priority:"HIGH",recommendations:["Implement multi-signature requirements for withdrawals","Add role-based access controls for different employee levels","Create emergency pause functionality","Enhance reward calculation transparency","Add vesting schedules for large rewards"],timeframe:"2-3 days for rewrite"},security:{recommendations:["Update all private keys immediately","Implement timelock delays for critical functions","Add multi-signature requirements for admin functions","Create circuit breakers for unusual activity","Establish regular security audits","Use hardware wallets for key storage"]},architecture:{principles:["Modular design with upgradeable proxies","Minimal privilege principle for all roles","Comprehensive event logging for transparency","Gas optimization for community affordability","Clear separation of concerns between contracts","Emergency pause mechanisms in all contracts"]}};if("GET"===a.method)return b.status(200).json({success:!0,message:"Ms. Jarvis Enhanced Contract Analysis Ready!",available_analysis:Object.keys(c),timestamp:new Date().toISOString()});if("POST"===a.method){let d,{message:e}=a.body||{},f=(e||"").toLowerCase();if(f.includes("employee reward vault")||f.includes("employee vault")){let a=c["employee reward vault"];d={success:!0,sender:"Ms. Jarvis",message:`For the Employee Reward Vault contract, I recommend HIGH priority rewrite. Here are my specific recommendations: ${a.recommendations.join("; ")}. Estimated ${a.timeframe}.`,analysis:a,timestamp:new Date().toISOString()}}else if(f.includes("security")||f.includes("compromised")){let a=c.security;d={success:!0,sender:"Ms. Jarvis",message:`For securing your compromised contracts, here are my key recommendations: ${a.recommendations.join("; ")}. Security should be your absolute top priority.`,analysis:a,timestamp:new Date().toISOString()}}else if(f.includes("architecture")||f.includes("best practices")){let a=c.architecture;d={success:!0,sender:"Ms. Jarvis",message:`For MountainShares contract architecture, follow these principles: ${a.principles.join("; ")}. This will ensure security, scalability, and community trust.`,analysis:a,timestamp:new Date().toISOString()}}else d=f.includes("contract")?{success:!0,sender:"Ms. Jarvis",message:"I'm ready to provide detailed analysis for your contracts! Ask me about specific contracts like 'employee reward vault', security enhancements, or architecture best practices.",timestamp:new Date().toISOString()}:{success:!0,sender:"Ms. Jarvis",message:"I'm Ms. Jarvis, ready to help with your MountainShares contracts! I can provide detailed analysis, security recommendations, and architectural guidance.",timestamp:new Date().toISOString()};return b.status(200).json(d)}b.status(405).json({error:"Method not allowed"})}var j=c(8112),k=c(8766);let l=(0,h.M)(d,"default"),m=(0,h.M)(d,"config"),n=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/jarvis-enhanced",pathname:"/api/jarvis-enhanced",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function o(a,b,c){let d=await n.prepare(a,b,{srcPage:"/api/jarvis-enhanced"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=n.instrumentationOnRequestError.bind(n),l=async e=>n.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:n.isDev,page:"/api/jarvis-enhanced",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(n.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=5215));module.exports=c})();