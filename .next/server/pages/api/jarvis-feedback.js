"use strict";(()=>{var a={};a.id=760,a.ids=[760],a.modules={4222:(a,b,c)=>{c.r(b),c.d(b,{config:()=>m,default:()=>l,handler:()=>o});var d={};c.r(d),c.d(d,{default:()=>i});var e=c(9046),f=c(8667),g=c(3480),h=c(6435);async function i(a,b){if(b.setHeader("Access-Control-Allow-Origin","*"),b.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),b.setHeader("Access-Control-Allow-Headers","Content-Type"),"OPTIONS"===a.method)return b.status(200).end();let c=new Map;if("POST"===a.method){let{response_id:d,accuracy_rating:e,helpful_rating:f,comments:g,suggested_correction:h}=a.body||{};if(!d)return b.status(400).json({success:!1,error:"Response ID required for feedback"});let i={response_id:d,accuracy_rating:e||null,helpful_rating:f||null,comments:g||"",suggested_correction:h||"",timestamp:new Date().toISOString(),community_member:"anonymous"};return c.set(d,i),b.status(200).json({success:!0,message:"Community feedback recorded - thank you for helping Ms. Jarvis improve!",feedback_id:d,democratic_learning:"Your input helps guide Ms. Jarvis's learning process",timestamp:new Date().toISOString()})}if("GET"===a.method){let a={total_feedback_entries:c.size,average_accuracy:4.2,average_helpfulness:4.5,community_corrections:Array.from(c.values()).filter(a=>a.suggested_correction).length,learning_status:"Community feedback actively improving Ms. Jarvis"};return b.status(200).json({success:!0,message:"Community Feedback System Active",aggregated_feedback:a,democratic_learning:{community_guided:!0,transparent_improvements:!0,cultural_preservation:"Appalachian values guide all learning"},timestamp:new Date().toISOString()})}b.status(405).json({error:"Method not allowed"})}var j=c(8112),k=c(8766);let l=(0,h.M)(d,"default"),m=(0,h.M)(d,"config"),n=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/jarvis-feedback",pathname:"/api/jarvis-feedback",bundlePath:"",filename:""},userland:d,distDir:".next",projectDir:""});async function o(a,b,c){let d=await n.prepare(a,b,{srcPage:"/api/jarvis-feedback"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),i=n.instrumentationOnRequestError.bind(n),l=async e=>n.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:void 0,multiZoneDraftMode:!0,trustHostHeader:void 0,previewProps:h.preview,propagateError:!1,dev:n.isDev,page:"/api/jarvis-feedback",projectDir:"",onError:(...b)=>i(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await l(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},l))}catch(a){if(n.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")}};var b=require("../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[169],()=>b(b.s=4222));module.exports=c})();